#jinja2:variable_start_string:'[%' , variable_end_string:'%]'
---

# We have to delete and re-create - not great tbh

# - name: Determine existing lifecycle environments
##   would need different forman_connect_string 
#   command: "hammer {{ foreman_connect_string }} lifecycle-environment list --organization \"[% target_foreman_organization %]\""
#   changed_when: false
#   register: r

- name: Determine existing lifecycle environments
  foreman_search_facts:
    username: "{{ target_foreman_username }}"
    password: "{{ target_foreman_password }}"
    server_url: "{{ target_foreman_server_url }}"
    validate_certs: "{{ foreman_verify_ssl }}"
    resource: lifecycle_environments
    search: organization_id=1
  register: r
  delegate_to: localhost
- set_fact:
    target_lifecycle_environments: "{{ r.resources }}"

# - name: Delete Lifecycle Environments
#   command: >-
#     hammer lifecycle-environment delete
#     --name {{ item.Name }} --organization [% target_foreman_organization %]
#   loop: [% lifecycle_environments %]
#   when: item.Name in target_lifecycle_environments and item.Name != 'Library'

- name: Delete Lifecycle Environments
  katello_lifecycle_environment:
    server_url: "{{ target_foreman_server_url }}"
    username: "{{ target_foreman_username }}"
    password: "{{ target_foreman_password }}"
    verify_ssl: "{{ foreman_verify_ssl }}"
    name: "{{ item.name }}"
    prior: "{{ item.prior }}"
    organization: [% target_foreman_organization %]
    state: absent
  loop: target_lifecycle_environments 
  when: item.Name != 'Library'

- set_fact:
    prior: "Library"
    last_lifecycle_environment: false

# horrible workaround as until does not work on include_tasks
- name: Create Lifecycle Environments in Order
  include_tasks: create_lifecycle_environment.yml
  loop: "{{ range(0,100,1)|list }}"
