#jinja2:variable_start_string:'[%' , variable_end_string:'%]'

- name: Assign subnet info 
  set_fact:
    subnet_info: [% subnet_info %]

- name: Generate Subnets
  foreman_subnet:
    server_url: "{{ target_foreman_server_url }}"
    username: "{{ target_foreman_username }}"
    password: "{{ target_foreman_password }}"
    verify_ssl: "{{ foreman_verify_ssl }}"
    name: "{{ item.name }}"
    boot_mode: "{{ item.boot_mode }}"
    cidr: "{{ item.cidr }}"
    dhcp_proxy: "{{ inventory_hostname }}"
    dns_primary: "{{ item.dns_primary }}"
    dns_secondary: "{{ item.dns_secondary }}"
    tftp_proxy: "{{ inventory_hostname }}"
    from_ip: "{{ item.from }}"
    to_ip: "{{ item.to }}"
    gateway: "{{ item.gateway }}"
    ipam: "{{ (item.ipam == 'None')|ternary(omit,item.ipam) }}"
    mtu: "{{ item.mtu }}"
    vlanid: "{{ item.vlanid }}"
    network_type: "{{ item.network_type }}"
    network: "{{ item.network }}"
    domains: "{{ (subnet_info|json_query(\"[?Id==`\"item.id\"`].Domains\"))[0]|default(\"\") }}"
    organizations:
      - [% target_foreman_organization %]
    locations: "{{ (subnet_info|json_query(\"[?Id==`\"item.id\"`].Locations\"))[0]|default(\"\") }}"
    state: present
  loop: [% subnets %]
  delegate_to: localhost

# We need to do this with hammer at the moment as there seems to be a problem with serialisation of the Network Addr in foreman_subnet
# We're also going to assume that the ID of the built-in capsule is 1

# - name: Generate Subnets
#   debug:
#     msg: >-
#       hammer -s {{ target_foreman_server_url }} -u {{ target_foreman_username }} -p {{ target_foreman_password }}
#       subnet create --boot-mode {{ item['Boot Mode'] }} --dhcp-id 1 --dns-id 1 --domains {{ item.Domains | json_query('[*].Name')|join(',') }}
#       --from {{ item['Start of IP Range'] }} --ipam {{ (item.IPAM == 'None')|ternary(omit,item.IPAM) }} --locations {{ item.Locations | json_query('[*].Name')|join(',') }}
#       --mtu {{ item.MTU|int }} --name {{ item.Name }} --network {{ item['Network Addr'] }} --network-type {{ item.Protocol }} --organization [% target_foreman_organization %]
#       --tftp-id 1 --to {{ item['End of IP Range'] }} --vlanid {{ item['VLAN ID']|int }} --dns-primary {{ item['Primary DNS'] }} --dns-secondary {{ item['Secondary DNS'] }}
#       --mask {{ item['Network Mask'] }}
#   loop: [% subnet_info %]

